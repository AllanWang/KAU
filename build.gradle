// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${KOTLIN}"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//plugins {
//    id 'com.gladed.androidgitversion' version '0.3.4' apply false
//}

//configure(subprojects - project(':sample')) {
////    apply plugin: 'com.gladed.androidgitversion'
////    apply from: '../extra.gradle'
//    apply plugin: 'com.android.library'
//    apply plugin: 'kotlin-android'
//    apply plugin: 'com.github.dcendents.android-maven'
//
////    if (!it.plugins.hasPlugin('com.gladed.androidgitversion')) apply plugin: 'com.gladed.androidgitversion'
////    else dependencies {
////        compile project(':core')
////    }
//
//    group = project.APP_GROUP
//
//    repositories {
//        jcenter()
//        mavenCentral()
//        maven { url "https://jitpack.io" }
//        maven { url "https://maven.google.com" }
//    }
//
//    android {
//        compileSdkVersion Integer.parseInt(project.TARGET_SDK)
//        buildToolsVersion project.BUILD_TOOLS
//
////        androidGitVersion {
////            codeFormat = 'MMNNPPBB'
////            prefix 'v'
////        }
//
//        defaultConfig {
//            minSdkVersion Integer.parseInt(project.MIN_SDK)
//            targetSdkVersion Integer.parseInt(project.TARGET_SDK)
////            versionCode androidGitVersion.code()
////            versionName androidGitVersion.name()
//            consumerProguardFiles 'progress-proguard.txt'
//            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        }
//        buildTypes {
//            release {
//                minifyEnabled false
//                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            }
//        }
//        lintOptions {
//            abortOnError false
//            checkReleaseBuilds false
//        }
//        resourcePrefix "kau_color"
//        sourceSets {
//            main.java.srcDirs += 'src/main/kotlin'
//            test.java.srcDirs += 'src/test/kotlin'
//        }
//    }
//}

//task clean(type: Delete) {
//    delete rootProject.buildDir
//}

task generateChangelogMd() {
    def parsedProjectXml = (new XmlParser()).parse("$project.rootDir/sample/src/main/res/xml/changelog.xml")
    def sw = new StringWriter()
    sw.append("# Changelog\n")
    parsedProjectXml.depthFirst().each {
        switch (it.name()) {
            case "version":
                sw.append("\n## ${it.@title}\n")
                break
            case "item":
                if (it.@text?.trim())
                    sw.append("* ${it.@text}\n")
        }
    }
    def changelogMd = new File("$project.rootDir/docs/Changelog.md")
    changelogMd.write(sw.toString())
}